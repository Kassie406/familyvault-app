arget experience (rich + secure)

Full dark background, gold accents.

Two sections: Password Managers (larger, “vault” weight) and Passwords (compact).

Search + Filters row.

Primary CTA: “Add credential” gold button (top-right).

Credential cards: masked, copy/reveal with confirmation; subtle tag chips.

Slide-over drawer for details/edit.

Drop-in UI spec (Tailwind + shadcn)
Page wrapper
<div className="min-h-screen bg-[#0A0A0F] text-[#F4F4F6]">
  <div className="mx-auto max-w-7xl px-6 py-8">
    <div className="flex items-center justify-between mb-6">
      <div>
        <h1 className="text-2xl font-semibold">Passwords</h1>
        <p className="text-sm text-neutral-400">Securely store and share credentials across the family.</p>
      </div>
      <Button className="bg-[#D4AF37] text-black hover:bg-[#c6a02e] rounded-full px-5">Add credential</Button>
    </div>

    {/* Search + filters */}
    <div className="mb-6 grid grid-cols-1 md:grid-cols-12 gap-3">
      <div className="md:col-span-6">
        <div className="flex items-center gap-2 rounded-xl border border-[#232530] bg-[#13141B] px-3 py-2">
          <svg className="h-4 w-4 text-neutral-400" viewBox="0 0 24 24"><path fill="currentColor" d="M10 18a8 8 0 1 1 5.293-14.293A8 8 0 0 1 10 18Zm11 3.707L16.314 17.02"/></svg>
          <input className="w-full bg-transparent text-sm focus:outline-none placeholder:text-neutral-500"
                 placeholder="Search by name, site, or owner" />
        </div>
      </div>
      <Select className="md:col-span-3">{/* Owner filter */}</Select>
      <Select className="md:col-span-3">{/* Type filter */}</Select>
    </div>

Section: Password Managers (larger “vault” cards)
<h2 className="text-sm font-semibold tracking-wide text-neutral-300 mb-3">Password Managers</h2>
<div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
  <ManagerCard name="Angel’s Password Manager" count={2} />
  <ManagerCard name="Kassandra’s Password Manager" count={2} />
</div>

Section: Passwords (compact cards grid)
<h2 className="text-sm font-semibold tracking-wide text-neutral-300 mb-3">Passwords</h2>
<div className="grid grid-cols-1 md:grid-cols-3 gap-4">
  <CredentialCard title="Angel’s Phone Password" owner="Angel" />
  <CredentialCard title="Home Wi-Fi" owner="House" tag="Network" />
  <CredentialCard title="Garage Door Code" owner="Home" tag="Access" />
  {/* … */}
</div>
</div></div>

Reusable cards
// Base luxury card
function Shell({children, className=""}:{children:React.ReactNode; className?:string}) {
  return (
    <div className={`rounded-2xl border border-[#232530] bg-gradient-to-b from-[#161616] to-[#0F0F0F]
                     shadow-[0_10px_28px_rgba(0,0,0,0.45)] transition-all
                     hover:border-[#D4AF37] hover:shadow-[0_16px_40px_rgba(212,175,55,0.12)] ${className}`}>
      {children}
    </div>
  );
}

function ManagerCard({name, count}:{name:string; count:number}) {
  return (
    <Shell className="p-5">
      <div className="flex items-center gap-3">
        <div className="h-10 w-10 rounded-xl grid place-items-center bg-[#D4AF37]/15 text-[#D4AF37] border border-[#232530]">
          <svg className="h-5 w-5" viewBox="0 0 24 24"><path fill="currentColor" d="M7 11V7a5 5 0 1 1 10 0v4h1a2 2 0 0 1 2 2v6H4v-6a2 2 0 0 1 2-2h1Z"/></svg>
        </div>
        <div className="min-w-0 flex-1">
          <div className="text-white font-medium truncate">{name}</div>
          <div className="text-xs text-neutral-400">+ {count} items pre-populated</div>
        </div>
        <DropdownDots />
      </div>
    </Shell>
  );
}

function CredentialCard({title, owner, tag}:{title:string; owner?:string; tag?:string}) {
  return (
    <Shell className="p-4">
      <div className="flex items-start gap-3">
        <div className="h-9 w-9 rounded-lg grid place-items-center bg-[#111214] border border-[#232530] text-neutral-300">
          <svg className="h-4 w-4" viewBox="0 0 24 24"><path fill="currentColor" d="M6 8h12v2H6zM6 12h7v2H6z"/></svg>
        </div>
        <div className="min-w-0 flex-1">
          <div className="text-sm text-white font-medium truncate">{title}</div>
          <div className="text-xs text-neutral-500 mt-0.5">
            {owner && <>Owner: <span className="text-neutral-300">{owner}</span></>}
            {tag && <> · <span className="rounded-full border border-[#232530] bg-[#111214] px-2 py-0.5 text-[11px]">{tag}</span></>}
          </div>

          {/* masked secret row */}
          <div className="mt-2 flex items-center gap-2">
            <div className="text-[13px] tracking-widest text-neutral-500 select-none">•••• •••• ••••</div>
            <button className="text-xs text-[#D4AF37] hover:underline underline-offset-4">Reveal</button>
            <span className="text-neutral-600 text-xs">•</span>
            <button className="text-xs text-neutral-300 hover:text-white">Copy</button>
          </div>
        </div>
        <DropdownDots />
      </div>
    </Shell>
  );
}

function DropdownDots() {
  return (
    <button className="h-8 w-8 inline-grid place-items-center rounded-lg border border-transparent text-neutral-400
                       hover:text-white hover:border-[#232530]">
      ⋯
    </button>
  );
}

Behavior & security (important)

Reveal action opens a confirm modal:

“Verify to reveal” → require 2FA or device biometric.

Display for 15 seconds with countdown, then auto-re-mask.

Log to audit: who revealed, which item, when.

Copy copies masked value only after reveal (or to a secure clipboard).

Share allows per-member access with roles (view, copy, admin).

Tags (Network, Device, Access, Finance) power filters.

Slide-over detail route /passwords/:id with:

fields (name, username, URL, note, custom fields),

attachments (screenshots),

history (edits, last reveal),

Rotate/Generate strong password.

Quick visual fixes you can apply now

Replace white page area with dark: bg-[#0A0A0F].

Use the Shell card on all items.

Promote Add credential as a gold pill button.

Add simple filters (Owner, Type) so the grid feels “managed”.

Ensure dropdown menu items use a gold-tinted hover with fixed text color (no disappearing text):

.menu-item{color:#F4F4F6;background:transparent}
.menu-item:hover{background:rgba(212,175,55,.18);color:#F4F4F6}