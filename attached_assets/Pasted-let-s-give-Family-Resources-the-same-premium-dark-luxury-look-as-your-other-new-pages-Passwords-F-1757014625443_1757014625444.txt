let‚Äôs give Family Resources the same premium, dark-luxury look as your other new pages (Passwords, Family IDs, Business). Below is a drop-in React + Tailwind implementation with:

sticky header + persistent ‚Äú+‚Äù button (click toggles menu, never disappears)

search + Created / Templates tabs with pill slider

elegant glass cards, subtle gradient rims, and action menu

empty states, keyboard/ARIA, and room for future API hooks

Page component

Create client/src/pages/resources/FamilyResourcesPage.tsx:

import { useEffect, useMemo, useState } from "react";
import { ChevronDown } from "lucide-react";
import { Link } from "react-router-dom";

/** TYPES */
type Resource = {
  id: string;
  title: string;
  category: "Document" | "Checklist" | "Letter" | "Guide";
  subTitle?: string;
  createdAt: string;   // ISO
  updatedAt?: string;  // ISO
  icon?: string;       // optional emoji or icon key
  isTemplate?: boolean;
};

/** MOCK LOAD (replace with fetch('/api/resources?...')) */
async function loadResources(): Promise<Resource[]> {
  return [
    { id: "r1", title: "Birth Certificate - John Doe", category: "Document", subTitle: "Important Document", createdAt: "2024-01-15" },
    { id: "r2", title: "Emergency Kit Inventory",     category: "Checklist", subTitle: "Emergency Equipment", createdAt: "2024-01-10" },
    { id: "r3", title: "Letter to Sarah",             category: "Letter",    subTitle: "Letter to Loved One", createdAt: "2024-01-05" },
    // templates
    { id: "t1", title: "Household Binder Index (Template)", category: "Guide", isTemplate: true, createdAt: "2024-02-01" },
    { id: "t2", title: "Family Emergency Plan (Template)",  category: "Checklist", isTemplate: true, createdAt: "2024-02-04" },
  ];
}

const tabs = [
  { key: "created", label: "Created" },
  { key: "templates", label: "Templates" },
] as const;
type TabKey = typeof tabs[number]["key"];

/** CARD */
function ResourceCard({ r }: { r: Resource }) {
  return (
    <article
      className="group rounded-2xl border border-white/6 bg-[linear-gradient(180deg,rgba(255,255,255,0.06),rgba(255,255,255,0.03))] p-4 hover:border-white/12 transition shadow-[0_0_0_1px_rgba(255,255,255,0.02)]"
      role="listitem"
    >
      <div className="flex items-center justify-between gap-3">
        <div className="flex items-center gap-3">
          <div className="grid size-9 place-items-center rounded-full bg-amber-400/15 text-amber-300 text-sm">
            {r.icon ?? "üìÑ"}
          </div>
          <div>
            <div className="font-medium leading-tight">{r.title}</div>
            <div className="text-xs text-white/55">
              {r.subTitle ?? r.category} ‚Ä¢ Created {new Date(r.createdAt).toLocaleDateString()}
            </div>
          </div>
        </div>

        <div className="flex items-center gap-2 opacity-80">
          <Link
            to={`/resources/${r.id}`}
            className="rounded-lg bg-white/6 px-3 py-1.5 text-sm hover:bg-white/10"
          >
            View
          </Link>
          <button className="rounded-lg bg-white/6 px-3 py-1.5 text-sm hover:bg-white/10">Edit</button>
          <button className="rounded-lg bg-white/6 px-3 py-1.5 text-sm hover:bg-white/10">Share</button>
          <button className="rounded-lg bg-white/6 px-3 py-1.5 text-sm hover:bg-white/10">‚ãØ</button>
        </div>
      </div>
    </article>
  );
}

/** PAGE */
export default function FamilyResourcesPage() {
  const [data, setData] = useState<Resource[]>([]);
  const [q, setQ] = useState("");
  const [tab, setTab] = useState<TabKey>("created");
  const [addOpen, setAddOpen] = useState(false);

  useEffect(() => { loadResources().then(setData); }, []);

  const created = useMemo(() => data.filter(d => !d.isTemplate), [data]);
  const templates = useMemo(() => data.filter(d => !!d.isTemplate), [data]);

  const filtered = useMemo(() => {
    const list = tab === "created" ? created : templates;
    if (!q.trim()) return list;
    const needle = q.toLowerCase();
    return list.filter(r =>
      r.title.toLowerCase().includes(needle) ||
      (r.subTitle ?? "").toLowerCase().includes(needle) ||
      r.category.toLowerCase().includes(needle)
    );
  }, [tab, q, created, templates]);

  return (
    <div className="px-6 pb-16">
      {/* Sticky header */}
      <div className="sticky top-0 z-20 -mx-6 mb-6 border-b border-white/8 bg-[rgb(7_8_10/0.85)] backdrop-blur supports-[backdrop-filter]:bg-black/60">
        <div className="px-6 py-4 flex items-center gap-3">
          <h1 className="text-2xl font-semibold">Family Resources</h1>

          {/* Persistent + menu */}
          <div className="relative">
            <button
              aria-label="Add"
              onClick={() => setAddOpen(o => !o)}
              className="grid size-8 place-items-center rounded-full bg-amber-400/25 text-amber-200 hover:bg-amber-400/35 transition"
            >
              +
            </button>
            {addOpen && (
              <div
                className="absolute left-0 z-30 mt-2 w-64 rounded-xl border border-white/10 bg-[#0b0d11]/95 shadow-xl backdrop-blur"
                role="menu"
              >
                {[
                  { label: "New Document", icon: "üìÑ" },
                  { label: "New Checklist", icon: "‚úÖ" },
                  { label: "New Letter", icon: "‚úâÔ∏è" },
                  { label: "New Guide", icon: "üìò" },
                  { label: "Import from Template", icon: "‚ú®" },
                ].map(opt => (
                  <button
                    key={opt.label}
                    className="flex w-full items-center gap-3 px-3 py-2 text-sm hover:bg-white/5 rounded-lg"
                    onClick={() => setAddOpen(false)}
                  >
                    <span className="text-base">{opt.icon}</span>
                    {opt.label}
                  </button>
                ))}
              </div>
            )}
          </div>

          {/* spacer */}
          <div className="grow" />

          {/* Search */}
          <div className="relative w-[420px]">
            <input
              value={q}
              onChange={e => setQ(e.target.value)}
              placeholder="Search resources, categories, or notes"
              className="w-full rounded-full bg-white/6 px-4 py-2 text-sm outline-none ring-0 focus:ring-2 focus:ring-amber-400/25"
              aria-label="Search family resources"
            />
            <span className="pointer-events-none absolute right-3 top-1/2 -translate-y-1/2 text-white/40">
              <ChevronDown className="size-4 rotate-180" />
            </span>
          </div>
        </div>

        {/* Tabs with pill slider */}
        <div className="px-6 pb-3">
          <div className="relative inline-flex rounded-full bg-white/6 p-1">
            {tabs.map((t) => {
              const active = tab === t.key;
              return (
                <button
                  key={t.key}
                  onClick={() => setTab(t.key)}
                  className={`relative z-10 rounded-full px-4 py-1.5 text-sm transition ${
                    active ? "text-black" : "text-white/75 hover:text-white"
                  }`}
                >
                  {t.label}
                </button>
              );
            })}
            <span
              className={`absolute inset-y-1 w-28 rounded-full bg-amber-400 transition-[left]`}
              style={{ left: tab === "created" ? 4 : 4 + 112 }}
              aria-hidden
            />
          </div>
        </div>
      </div>

      {/* Content */}
      <div role="list" className="mx-auto grid max-w-6xl gap-3">
        {filtered.length === 0 ? (
          <div className="rounded-2xl border border-dashed border-white/10 p-8 text-center text-sm text-white/60">
            No {tab === "created" ? "created resources" : "templates"} found. Use the
            <span className="mx-1 rounded-full bg-amber-400/25 px-2 py-0.5 text-amber-200"> + </span>
            button to add a new one.
          </div>
        ) : (
          filtered.map(r => <ResourceCard key={r.id} r={r} />)
        )}
      </div>

      {/* Footer CTA */}
      <div className="mx-auto mt-8 max-w-6xl">
        <button
          onClick={() => setAddOpen(true)}
          className="w-full rounded-full bg-amber-400 text-black py-3 font-medium hover:brightness-95 transition"
        >
          + Create New Resource
        </button>
      </div>
    </div>
  );
}

Per-resource page (optional starter)

Create client/src/pages/resources/ResourceDetailPage.tsx for a consistent inner view:

import { useParams, Link } from "react-router-dom";

export default function ResourceDetailPage() {
  const { id } = useParams();

  return (
    <div className="px-6 py-6">
      <header className="mb-4 flex items-center gap-3">
        <Link to="/resources" className="text-sm text-amber-300 hover:underline">Family Resources</Link>
        <span className="text-white/40">/</span>
        <h1 className="text-2xl font-semibold">Resource</h1>
        <div className="ml-auto flex gap-2">
          <button className="rounded-lg bg-white/6 px-3 py-1.5 text-sm hover:bg-white/10">Edit</button>
          <button className="rounded-lg bg-white/6 px-3 py-1.5 text-sm hover:bg-white/10">Share</button>
          <button className="rounded-lg bg-white/6 px-3 py-1.5 text-sm hover:bg-white/10">Export</button>
        </div>
      </header>

      <div className="grid gap-4 md:grid-cols-3">
        <section className="md:col-span-2 rounded-2xl border border-white/6 bg-white/[0.03] p-4">
          <h2 className="mb-2 font-medium">Preview</h2>
          <div className="rounded-xl border border-white/10 bg-black/40 p-6 text-sm text-white/80">
            This is where the resource content or file preview would appear (id: {id}).
          </div>
        </section>
        <aside className="rounded-2xl border border-white/6 bg-white/[0.03] p-4">
          <h2 className="mb-2 font-medium">Details</h2>
          <ul className="space-y-2 text-sm text-white/70">
            <li>Type: Document</li>
            <li>Created: 2024-01-15</li>
            <li>Updated: 2024-02-01</li>
            <li>Owner: Family</li>
          </ul>
        </aside>
      </div>
    </div>
  );
}

Routes

Add to your app routes:

// src/routes/resources.tsx
import FamilyResourcesPage from "@/pages/resources/FamilyResourcesPage";
import ResourceDetailPage from "@/pages/resources/ResourceDetailPage";

export const resourceRoutes = [
  { path: "/resources", element: <FamilyResourcesPage /> },
  { path: "/resources/:id", element: <ResourceDetailPage /> },
];

Styling notes (matches your theme)

Glass + gradient: bg-[linear-gradient(180deg,rgba(255,255,255,0.06),rgba(255,255,255,0.03))] + border-white/6

Gold accents: bg-amber-400/25, text-amber-200, pill slider bg-amber-400

Inputs: bg-white/6 with focus:ring-amber-400/25

Persistent ‚Äú+‚Äù: button toggles menu; menu never steals the anchor or hide the button

Hook to your API (when ready)

Replace loadResources() with:

const res = await fetch("/api/resources?tab=" + (tab === "templates" ? "templates" : "created"));
setData(await res.json());


And wire Create/Edit buttons to your existing modals.

This gives your Family Resources page the same polished, luxury feel as the rest of your app ‚Äî consistent header, persistent add button, elegant cards, and a clean, modern experience. If you want me to tailor the card icons per category or wire to your exact API shape, drop me the endpoint payload and I‚Äôll adapt the code.