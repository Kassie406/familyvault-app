a drop-in Create / Edit Coupon modal tailored to your console. It‚Äôs accessible, theme-consistent, and matches how Stripe models coupons (percent/fixed/free-trial, limits, scope to plans).

üéüÔ∏è Create / Edit Coupon (Admin)
HTML
<!-- Trigger -->
<button class="btn primary" id="open-coupon-modal">+ Create Coupon</button>

<!-- MODAL -->
<div class="modal-backdrop" id="coupon-modal" hidden>
  <div class="modal" role="dialog" aria-modal="true" aria-labelledby="couponTitle">
    <header class="modal-header">
      <h3 id="couponTitle">Create Coupon</h3>
      <button class="icon-btn" id="coupon-close" aria-label="Close">‚úñ</button>
    </header>

    <form id="coupon-form" novalidate>
      <!-- Basics -->
      <div class="grid-3">
        <div class="field">
          <label>Coupon Code</label>
          <div class="inline">
            <input id="code" name="code" placeholder="WELCOME10" required pattern="[A-Z0-9_-]{3,32}" />
            <button type="button" class="btn ghost" id="gen-code">Generate</button>
          </div>
          <small class="hint">UPPERCASE letters, numbers, ‚Äú-‚Äù or ‚Äú_‚Äù, 3‚Äì32 chars.</small>
        </div>

        <div class="field">
          <label>Type</label>
          <select id="type" name="type">
            <option value="percent" selected>Percentage (%)</option>
            <option value="fixed">Fixed amount ($)</option>
            <option value="trial">Free trial</option>
          </select>
        </div>

        <div class="field value percent-only">
          <label>Percent Off</label>
          <input id="percent_off" name="percent_off" type="number" min="1" max="100" placeholder="10" />
        </div>

        <div class="field value fixed-only" hidden>
          <label>Amount Off (USD)</label>
          <input id="amount_off" name="amount_off" type="number" min="1" step="0.01" placeholder="5.00" />
        </div>

        <div class="field value trial-only" hidden>
          <label>Trial Length (days)</label>
          <input id="trial_days" name="trial_days" type="number" min="1" max="365" placeholder="30" />
        </div>
      </div>

      <!-- Scope -->
      <fieldset>
        <legend>Applies To</legend>
        <div class="grid-2">
          <div class="field">
            <label>Audience / Tenant</label>
            <select id="tenant" name="tenant">
              <option value="PUBLIC" selected>Client Plans (billable)</option>
              <option value="FAMILY" disabled>Family (no billing)</option>
              <option value="STAFF" disabled>Staff (no billing)</option>
            </select>
          </div>
          <div class="field">
            <label>Plans</label>
            <select id="plans" name="plans" multiple>
              <!-- Populate from API -->
              <option value="price_free">Free</option>
              <option value="price_silver_10" selected>Silver</option>
              <option value="price_gold_20">Gold</option>
              <option value="price_custom_quote">Custom (Advisors)</option>
            </select>
            <small class="hint">Leave all unselected to allow **all** client plans.</small>
          </div>
        </div>
      </fieldset>

      <!-- Limits -->
      <fieldset>
        <legend>Limits & Expiration</legend>
        <div class="grid-3">
          <div class="field">
            <label>Max Total Uses (optional)</label>
            <input id="max_redemptions" name="max_redemptions" type="number" min="1" placeholder="e.g., 100" />
          </div>
          <div class="field">
            <label>Per-Customer Limit (optional)</label>
            <input id="per_customer" name="per_customer" type="number" min="1" placeholder="e.g., 1" />
          </div>
          <div class="field">
            <label>Expiration (optional)</label>
            <input id="expires_at" name="expires_at" type="date" />
          </div>
        </div>

        <div class="grid-3">
          <div class="field">
            <label>First-Invoice Only?</label>
            <select id="first_invoice_only" name="first_invoice_only">
              <option value="false" selected>No</option>
              <option value="true">Yes</option>
            </select>
            <small class="hint">If yes, discount won‚Äôt repeat on renewals.</small>
          </div>
          <div class="field">
            <label>Stackable?</label>
            <select id="stackable" name="stackable">
              <option value="false" selected>No</option>
              <option value="true">Yes (allow multiple coupons)</option>
            </select>
          </div>
          <div class="field">
            <label>Status</label>
            <select id="status" name="status">
              <option value="active" selected>Active</option>
              <option value="disabled">Disabled</option>
            </select>
          </div>
        </div>
      </fieldset>

      <!-- Preview -->
      <div class="preview card" id="coupon-preview" aria-live="polite">
        <strong>Preview:</strong> <span id="preview-text">10% off on Silver (and eligible plans)</span>
      </div>

      <footer class="modal-footer">
        <button type="button" class="btn ghost" id="cancel-coupon">Cancel</button>
        <button type="submit" class="btn primary">Save Coupon</button>
      </footer>
    </form>
  </div>
</div>

CSS (reuse from your theme; only unique bits below)
/* reuse modal styles from Plans modal */
.modal-backdrop{position:fixed;inset:0;background:rgba(3,7,18,.55);display:grid;place-items:center;z-index:50}
.modal{width:min(760px,92vw);background:#fff;border:1px solid #E5EAF2;border-radius:16px;box-shadow:0 16px 48px rgba(16,24,40,.16)}
.modal-header,.modal-footer{display:flex;align-items:center;justify-content:space-between;padding:16px 20px;border-bottom:1px solid #EEF1F5}
.modal-footer{border-top:1px solid #EEF1F5;border-bottom:0}
.modal form{padding:16px 20px 0}
.grid-2{display:grid;grid-template-columns:1fr 1fr;gap:12px}
.grid-3{display:grid;grid-template-columns:1fr 1fr 1fr;gap:12px}
.field{display:flex;flex-direction:column;gap:6px}
.field input,.field select{border:1px solid #D7DEE8;border-radius:10px;padding:10px 12px}
.field input:focus,.field select:focus{outline:2px solid #1F6FEB33;border-color:#1F6FEB}
.inline{display:flex;gap:8px}
.hint{color:#6B7280}
.card{background:#F8FAFF;border:1px solid #E5EAF2;border-radius:12px;padding:12px;margin:12px 0}
.btn{border-radius:10px;padding:10px 14px;border:1px solid transparent;cursor:pointer}
.btn.primary{background:#1F6FEB;color:#fff}.btn.primary:hover{background:#195BD2}
.btn.ghost{background:#fff;border-color:#CBD2E0;color:#344054}.btn.ghost:hover{background:#F6F8FB}
.icon-btn{border:0;background:transparent;font-size:14px;cursor:pointer;color:#667085}.icon-btn:hover{color:#1F6FEB}
[hidden]{display:none !important}
@media (max-width:820px){.grid-2,.grid-3{grid-template-columns:1fr}}

JS (open/close, type logic, preview, validation, payload)
<script>
const couponModal = document.getElementById('coupon-modal');
const openCouponBtn = document.getElementById('open-coupon-modal');
const closeCouponBtns = [document.getElementById('coupon-close'), document.getElementById('cancel-coupon')];
const form = document.getElementById('coupon-form');

function openCoupon(){ couponModal.hidden=false; document.body.style.overflow='hidden'; document.getElementById('code').focus(); }
function closeCoupon(){ couponModal.hidden=true; document.body.style.overflow=''; }
openCouponBtn?.addEventListener('click', openCoupon);
closeCouponBtns.forEach(b=>b?.addEventListener('click', closeCoupon));
couponModal.addEventListener('click', e=>{ if(e.target===couponModal) closeCoupon(); });
document.addEventListener('keydown', e=>{ if(!couponModal.hidden && e.key==='Escape') closeCoupon(); });

/* Code generator */
document.getElementById('gen-code').addEventListener('click', ()=>{
  const rand = Math.random().toString(36).toUpperCase().replace(/[^A-Z0-9]/g,'').slice(2,10);
  const code = `WELCOME-${rand}`;
  document.getElementById('code').value = code;
  updatePreview();
});

/* Type logic */
const type = document.getElementById('type');
const percentRow = document.querySelector('.percent-only');
const fixedRow = document.querySelector('.fixed-only');
const trialRow = document.querySelector('.trial-only');

function syncType(){
  percentRow.hidden = type.value!=='percent';
  fixedRow.hidden   = type.value!=='fixed';
  trialRow.hidden   = type.value!=='trial';
}
type.addEventListener('change', ()=>{ syncType(); updatePreview(); });
syncType();

/* Preview */
function updatePreview(){
  const t = type.value;
  const code = document.getElementById('code').value || 'CODE';
  const planSel = [...document.getElementById('plans').selectedOptions].map(o=>o.textContent);
  const scope = planSel.length ? planSel.join(', ') : 'all eligible plans';
  let main='';
  if(t==='percent') main = `${document.getElementById('percent_off').value || 10}% off`;
  if(t==='fixed')   main = `$${Number(document.getElementById('amount_off').value||5).toFixed(2)} off`;
  if(t==='trial')   main = `${document.getElementById('trial_days').value || 30}-day free trial`;
  document.getElementById('preview-text').textContent = `${main} with code ${code} on ${scope}`;
}
form.addEventListener('input', updatePreview);
updatePreview();

/* Submit */
form.addEventListener('submit', async (e)=>{
  e.preventDefault();

  // basic validation
  const code = form.code.value.trim().toUpperCase();
  if(!/^[A-Z0-9_-]{3,32}$/.test(code)) { alert('Coupon code must be 3‚Äì32 chars (A‚ÄìZ, 0‚Äì9, -, _)'); return; }

  const payload = {
    tenant: form.tenant.value,                 // PUBLIC
    code,
    type: form.type.value,                     // percent | fixed | trial
    percent_off: form.percent_off.value ? Number(form.percent_off.value) : null,
    amount_off: form.amount_off.value ? Number(form.amount_off.value) : null,
    trial_days: form.trial_days.value ? Number(form.trial_days.value) : null,
    plan_price_ids: [...form.plans.selectedOptions].map(o=>o.value), // empty = all plans
    max_redemptions: form.max_redemptions.value ? Number(form.max_redemptions.value) : null,
    per_customer: form.per_customer.value ? Number(form.per_customer.value) : null,
    expires_at: form.expires_at.value || null, // YYYY-MM-DD
    first_invoice_only: form.first_invoice_only.value === 'true',
    stackable: form.stackable.value === 'true',
    status: form.status.value                  // active | disabled
  };

  // logical checks
  if (payload.type==='percent' && !(payload.percent_off>0 && payload.percent_off<=100)) {
    alert('Enter a percent between 1 and 100.'); return;
  }
  if (payload.type==='fixed' && !(payload.amount_off>0)) {
    alert('Enter a fixed amount greater than 0.'); return;
  }
  if (payload.type==='trial' && !(payload.trial_days>0)) {
    alert('Enter a positive number of trial days.'); return;
  }

  // POST to your API (example)
  // await fetch('/api/admin/coupons', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload) });

  console.log('Coupon payload ‚Üí', payload);
  closeCoupon();
});
</script>

Example API contract (server)

POST /api/admin/coupons

{
  "tenant": "PUBLIC",
  "code": "WELCOME10",
  "type": "percent",
  "percent_off": 10,
  "amount_off": null,
  "trial_days": null,
  "plan_price_ids": ["price_silver_10","price_gold_20"],
  "max_redemptions": 1000,
  "per_customer": 1,
  "expires_at": "2026-12-31",
  "first_invoice_only": true,
  "stackable": false,
  "status": "active"
}


Server should enforce tenant = PUBLIC for billable coupons, validate uniqueness of code, and, if you sync to Stripe, create a corresponding Stripe Coupon/Promotion Code (and store their IDs).

Tiny UI upgrades on the tab

Add a ‚Äú# of redemptions‚Äù stat above the table (last 30 days).

In the table: show Status badges (Active / Disabled / Expired), Scopes (All plans vs specific), and Expires date with a subtle countdown.

Allow bulk disable and export.