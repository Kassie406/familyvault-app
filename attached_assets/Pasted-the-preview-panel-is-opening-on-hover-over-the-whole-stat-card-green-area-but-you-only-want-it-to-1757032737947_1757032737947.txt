the preview panel is opening on hover over the whole stat card (green area), but you only want it to open when the user clicks a button. The fix is to remove any :hover-driven visibility and make the panel explicitly controlled by click state (and to stop the click from navigating the card link).

Below is a drop-in pattern you can use for all four stat cards.

What to change

Remove every group-hover:* or hover:* class that affects the preview panel’s visibility.

Add a small button (chevron/“Recent”) on the card that toggles the panel.

Stop propagation on that button so it doesn’t trigger the card’s navigation.

Close the panel on outside click and Esc, keep it keyboard-accessible.

Example (React + Tailwind)
import { useEffect, useRef, useState } from "react";
import { Link } from "react-router-dom";
import { ChevronDown } from "lucide-react";

type StatCardProps = {
  to: string;
  icon: React.ComponentType<React.SVGProps<SVGSVGElement>>;
  label: string;
  value: number | string;
  previewItems: Array<{ title: string; subtitle?: string }>;
  id: string; // unique for aria-controls
};

export function StatCard({
  to,
  icon: Icon,
  label,
  value,
  previewItems,
  id,
}: StatCardProps) {
  const [open, setOpen] = useState(false);
  const wrapRef = useRef<HTMLDivElement>(null);

  // Close on outside click or ESC
  useEffect(() => {
    function onDocClick(e: MouseEvent) {
      if (!wrapRef.current) return;
      if (!wrapRef.current.contains(e.target as Node)) setOpen(false);
    }
    function onKey(e: KeyboardEvent) {
      if (e.key === "Escape") setOpen(false);
    }
    document.addEventListener("mousedown", onDocClick);
    document.addEventListener("keydown", onKey);
    return () => {
      document.removeEventListener("mousedown", onDocClick);
      document.removeEventListener("keydown", onKey);
    };
  }, []);

  return (
    <div ref={wrapRef} className="relative">
      {/* Whole card navigates */}
      <Link
        to={to}
        className="group no-hover-bg block rounded-2xl border border-zinc-800/80
                   bg-gradient-to-b from-zinc-900/60 to-zinc-950/70 p-5
                   shadow-[0_1px_0_0_rgba(255,255,255,0.06)_inset,0_0_0_1px_rgba(255,255,255,0.03)_inset]
                   focus:outline-none focus:ring-2 focus:ring-amber-400/40"
      >
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            <Icon className="h-6 w-6 text-amber-400/70 transition-colors group-hover:text-amber-400" />
            <span className="text-sm font-medium text-zinc-400 transition-colors group-hover:text-amber-400">
              {label}
            </span>
          </div>

          {/* The ONLY trigger for the preview */}
          <button
            type="button"
            aria-expanded={open}
            aria-controls={`stat-preview-${id}`}
            className="inline-flex items-center gap-1 rounded-md px-2 py-1
                       text-xs font-medium text-zinc-400 hover:text-amber-400
                       focus:outline-none focus:ring-2 focus:ring-amber-400/40"
            // Prevent navigating the <Link>
            onClick={(e) => {
              e.preventDefault();
              e.stopPropagation();
              setOpen((o) => !o);
            }}
          >
            Recent
            <ChevronDown
              className={`h-4 w-4 transition-transform ${open ? "rotate-180" : ""}`}
            />
          </button>
        </div>

        <p className="mt-3 text-3xl font-semibold text-white">{value}</p>
      </Link>

      {/* Anchored preview panel (no hover logic anywhere) */}
      <div
        id={`stat-preview-${id}`}
        role="region"
        aria-label={`${label} — recent`}
        data-open={open ? "true" : "false"}
        className="
          pointer-events-auto absolute left-0 right-0 top-full z-20 mt-2
          rounded-xl border border-zinc-800/80 bg-zinc-950/95 backdrop-blur
          shadow-lg transition-all
          opacity-0 translate-y-2 scale-[0.98] hidden
          data-[open=true]:block data-[open=true]:opacity-100 data-[open=true]:translate-y-0 data-[open=true]:scale-100
        "
      >
        <div className="flex items-center justify-between px-4 pt-3 pb-1">
          <span className="text-[10px] font-semibold tracking-wider text-zinc-400">
            {label.toUpperCase()} — RECENT
          </span>
          <Link
            to={to}
            className="text-[10px] font-medium text-amber-400 hover:underline"
          >
            View all
          </Link>
        </div>
        <ul className="px-2 pb-3">
          {previewItems.slice(0, 5).map((it, i) => (
            <li
              key={i}
              className="flex items-center gap-2 rounded-lg px-2 py-2
                         text-sm text-zinc-300"
            >
              <span className="inline-block h-2.5 w-2.5 rounded-full bg-zinc-600" />
              <div className="flex-1">
                <div className="leading-tight">{it.title}</div>
                {it.subtitle && (
                  <div className="text-[11px] text-zinc-500">{it.subtitle}</div>
                )}
              </div>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}

Important notes

No group-hover on the preview panel. Visibility is controlled by [data-open=true] only.

The toggle button calls e.preventDefault() and e.stopPropagation() so clicking it won’t follow the Link.

The icon and label still glow gold on hover; the card background does not change (you already added no-hover-bg).

The panel closes on outside click and Esc for good UX.

If you already wired a hover-only CSS like:

<div class="group">
  ...
  <div class="hidden group-hover:block ...">   <!-- REMOVE THIS -->


remove that and rely on the data-open approach above.

If you want the whole card click to still navigate even while the panel is open, keep as-is. If you’d rather disable navigation while open, add onClick to the Link and if (open) e.preventDefault().