a ready-to-paste filter bar for your Coupons page with Status, Type, Applies To (plan), and Search. It filters the existing table rows in-place using data-* attributes (no backend needed).

üéõÔ∏è Coupon Filters (Status ‚Ä¢ Type ‚Ä¢ Plan ‚Ä¢ Search)
1) HTML ‚Äî place above the coupons table
<div class="coupon-filters">
  <div class="filters-left">
    <select id="f-status" aria-label="Filter by status">
      <option value="ALL" selected>Status: All</option>
      <option value="active">Active</option>
      <option value="disabled">Disabled</option>
      <option value="expired">Expired</option>
    </select>

    <select id="f-type" aria-label="Filter by type">
      <option value="ALL" selected>Type: All</option>
      <option value="percent">Percent</option>
      <option value="fixed">Fixed</option>
      <option value="trial">Trial</option>
    </select>

    <select id="f-plan" aria-label="Filter by plan">
      <option value="ALL" selected>Applies to: All</option>
      <!-- Fill with your plan price IDs -->
      <option value="price_free">Free</option>
      <option value="price_silver_10">Silver</option>
      <option value="price_gold_20">Gold</option>
      <option value="price_custom_quote">Custom (Advisors)</option>
    </select>
  </div>

  <div class="filters-right">
    <input id="f-search" type="search" placeholder="Search code or value‚Ä¶" aria-label="Search coupons" />
    <button class="btn ghost" id="f-clear">Clear</button>
  </div>
</div>

2) Minimal CSS (matches your console style)
.coupon-filters{
  display:flex;justify-content:space-between;align-items:center;
  gap:12px;margin:8px 0 12px 0
}
.filters-left,.filters-right{display:flex;gap:10px;align-items:center}
.coupon-filters select,.coupon-filters input[type="search"]{
  border:1px solid #D7DEE8;border-radius:10px;padding:10px 12px;background:#fff
}
.coupon-filters input[type="search"]{width:260px}
#f-clear{padding:10px 12px}

3) Add data attributes to your table rows

Update each <tr> in your coupons table with attributes so filtering works:

<tr
  data-status="active"             <!-- active | disabled | expired -->
  data-type="percent"              <!-- percent | fixed | trial -->
  data-plans="price_silver_10,price_gold_20"   <!-- comma-separated -->
  data-code="WELCOME10"            <!-- for search -->
  data-value="10% off"             <!-- for search -->
>
  ‚Ä¶
</tr>


(Rows that apply to all plans can use data-plans="*".)

4) JS ‚Äî client-side filtering
<script>
(function(){
  const rows = [...document.querySelectorAll('#coupons-table tbody tr')];
  const fStatus = document.getElementById('f-status');
  const fType   = document.getElementById('f-type');
  const fPlan   = document.getElementById('f-plan');
  const fSearch = document.getElementById('f-search');
  const fClear  = document.getElementById('f-clear');

  function matchPlan(rowVal, filterVal){
    if (filterVal === 'ALL') return true;
    if (!rowVal) return false;
    if (rowVal === '*') return true;
    return rowVal.split(',').map(s=>s.trim()).includes(filterVal);
  }

  function matches(row){
    const sOK = (fStatus.value === 'ALL') || (row.dataset.status === fStatus.value);
    const tOK = (fType.value   === 'ALL') || (row.dataset.type   === fType.value);
    const pOK = matchPlan(row.dataset.plans || '', fPlan.value);

    const q = fSearch.value.trim().toLowerCase();
    const qOK = !q || (
      (row.dataset.code||'').toLowerCase().includes(q) ||
      (row.dataset.value||'').toLowerCase().includes(q)
    );

    return sOK && tOK && pOK && qOK;
  }

  function applyFilters(){
    let visible = 0;
    rows.forEach(r => {
      const show = matches(r);
      r.hidden = !show;
      if (show) visible++;
    });

    // optional: show an empty state row if nothing matches
    let empty = document.querySelector('#coupons-table tbody tr.empty-row');
    if (!empty){
      empty = document.createElement('tr');
      empty.className = 'empty-row';
      empty.hidden = true;
      empty.innerHTML = `<td colspan="8" class="tc muted" style="padding:16px">No coupons match the filters.</td>`;
      document.querySelector('#coupons-table tbody').appendChild(empty);
    }
    empty.hidden = (visible !== 0);
  }

  [fStatus,fType,fPlan,fSearch].forEach(el => el.addEventListener('input', applyFilters));
  fClear.addEventListener('click', ()=>{
    fStatus.value='ALL'; fType.value='ALL'; fPlan.value='ALL'; fSearch.value='';
    applyFilters();
  });

  applyFilters(); // initial
})();
</script>

Notes & tips

Expired status: set data-status="expired" server-side when expires_at < today.

Performance: for hundreds of rows, debounce the search input or filter server-side.

Accessibility: each control already has an aria-label; keep tab order natural.

Consistency: reuse your badge colors in the table; filters don‚Äôt need badges.