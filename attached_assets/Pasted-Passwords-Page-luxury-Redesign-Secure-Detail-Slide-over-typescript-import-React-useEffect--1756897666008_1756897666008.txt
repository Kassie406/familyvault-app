Passwords Page (luxury Redesign + Secure Detail Slide‑over)
· typescript
import React, { useEffect, useMemo, useState, useCallback } from "react";
                <div className="flex items-center gap-3">
                  <BadgeCheck className="h-5 w-5 text-[#D4AF37]"/>
                  <div className="text-sm text-neutral-300">Secret</div>
                </div>
                {isRevealed ? (
                  <div className="text-[11px] text-neutral-400">Auto-hiding in <span className="text-white">{secondsLeft}s</span></div>
                ) : null}
              </div>
              <div className="mt-3 rounded-xl border border-[#232530] bg-[#111111] px-3 py-2 text-[15px] tracking-widest">
                {isRevealed ? cred.secret : maskSecret(cred.secret)}
              </div>
              <div className="mt-3 flex items-center gap-2">
                {!isRevealed ? (
                  <Button className="bg-[#D4AF37] text-black hover:bg-[#c6a02e]" onClick={startReveal}>
                    <Eye className="h-4 w-4 mr-1"/> Reveal
                  </Button>
                ) : (
                  <Button variant="ghost" className="text-neutral-300 hover:text-white" onClick={()=>setRevealUntil(null)}>
                    <EyeOff className="h-4 w-4 mr-1"/> Hide now
                  </Button>
                )}
                <Button variant="ghost" className="text-neutral-300 hover:text-white" onClick={handleCopy}>
                  <Copy className="h-4 w-4 mr-1"/> Copy
                </Button>
              </div>
            </div>


            {/* Meta */}
            <div className="grid grid-cols-2 gap-3">
              {cred.username && (
                <div className={`${shell} p-3`}>
                  <div className="text-xs text-neutral-400">Username</div>
                  <div className="text-sm">{cred.username}</div>
                </div>
              )}
              {cred.url && (
                <div className={`${shell} p-3`}>
                  <div className="text-xs text-neutral-400">URL</div>
                  <a className="text-sm text-[#D4AF37] hover:underline" href={cred.url} target="_blank" rel="noreferrer">{cred.url}</a>
                </div>
              )}
              <div className={`${shell} p-3`}>
                <div className="text-xs text-neutral-400">Last updated</div>
                <div className="text-sm">{new Date(cred.updatedAt).toLocaleString()}</div>
              </div>
            </div>


            {/* Audit log */}
            <div className="space-y-2">
              <div className="text-sm font-medium">Activity</div>
              <div className="space-y-2">
                {audit.length === 0 ? (
                  <div className="text-xs text-neutral-500">No recent actions.</div>
                ) : (
                  audit.map((a, i) => (
                    <div key={i} className="text-xs text-neutral-300 flex items-center gap-2">
                      <span className="h-2 w-2 rounded-full bg-[#D4AF37] inline-block" />
                      {a.action} · {new Date(a.ts).toLocaleTimeString()}
                    </div>
                  ))
                )}
              </div>
            </div>
          </div>
        )}


        {/* Reveal confirmation (placeholder for 2FA/biometric) */}
        <Dialog open={confirmOpen} onOpenChange={setConfirmOpen}>
          <DialogContent className="sm:max-w-[480px] bg-[#0F0F13] text-white border border-[#2A2A33]">
            <DialogHeader>
              <DialogTitle className="text-base">Verify to reveal</DialogTitle>
              <DialogDescription className="text-xs text-neutral-400">For your security, confirm this action. You can integrate OTP / device biometric here.</DialogDescription>
            </DialogHeader>
            <div className="grid gap-2">
              <Label className="text-xs text-neutral-300">One‑time code</Label>
              <Input placeholder="Enter 6‑digit code" className="bg-[#111111] border-[#2A2A33] text-white"/>
            </div>
            <div className="flex justify-end gap-2 pt-2">
              <Button variant="ghost" className="text-neutral-300 hover:text-white" onClick={()=>setConfirmOpen(false)}>Cancel</Button>
              <Button className="bg-[#D4AF37] text-black hover:bg-[#c6a02e]" onClick={confirmReveal}>Confirm</Button>
            </div>
          </DialogContent>
        </Dialog>
      </SheetContent>
    </Sheet>
  );
}


/* Keep dropdown text visible on hover in dark mode */
// (Place in global.css if preferred)
// .menu-item { color:#F4F4F6; background:transparent; }
// .menu-item:hover { background: rgba(212,175,55,.18); color:#F4F4F6; }



All set. I added a full Passwords page redesign plus a secure detail slide-over to your canvas.

What’s included

Luxury layout (dark gradient cards, gold accents) with:

Header + Add credential gold button

Search bar + Owner/Type filters

Password Managers (larger “vault” cards)

Passwords grid (compact masked cards)

Route-driven detail panel (/passwords/:id) featuring:

Reveal/Copy workflow with confirm dialog (placeholder 2FA)

15-second auto-hide countdown and manual “Hide now”

Local audit log (Revealed / Copied)

Meta blocks (username, URL, last updated)

Wire-up
// routes
<Route path="/passwords" element={<PasswordsPage />} />
<Route path="/passwords/:id" element={<PasswordsPage />} /> // same component so the panel overlays


Clicking any credential card opens the slide-over; closing returns to /passwords.